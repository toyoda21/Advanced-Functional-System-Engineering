<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <arg name="x" default="0"/>
  <arg name="y" default="0"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="1.0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(find diff_mobile_robot)/worlds/diff_mobile_robot.world"/>
    
  </include>

  <!-- urdf xml robot description loaded on the Parameter Server-->
  <param name="robot_description" command="$(find xacro)/xacro.py $(find diff_mobile_robot)/urdf/diff_mobile_robot.xacro" /> 
 <!-- Setting gui parameter to true for display joint slider -->
 <param name="use_gui" value="true"/>
 <!-- Starting Joint state publisher node which will publish the joint values -->
 <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
 <!-- Starting robot state publish which will publish tf -->
 <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
 args="-urdf -model diff_mobile_robot -param robot_description
 -x $(arg x) -y $(arg y) -z $(arg z)
 -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

</launch>